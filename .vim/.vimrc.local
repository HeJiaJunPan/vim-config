filetype plugin indent on   " Automatically detect file types.
filetype on                 " 开启文件类型侦测
filetype plugin on          " 根据侦测到的不同类型:加载对应的插件
syntax on                   " Syntax highlighting

" 插入模式下用绝对行号, 普通模式下用相对
set relativenumber  "初始状态，相对行号
autocmd InsertEnter * :set norelativenumber number
autocmd InsertLeave * :set relativenumber

"set mouse=a                 " Automatically enable mouse usage
"set mousehide               " Hide the mouse cursor while typing
set ruler
set showmode
set hlsearch
set nobackup
set noswapfile  "禁止生成临时文件
set history=1024    "历史记录数
set autoread    "设置当文件在外部被修改，自动更新该文件
"set autochdir
"set whichwrap=b,s,<,>,[,]
set nobomb
"使回格键（backspace）正常处理indent, eol, start等
set backspace=indent,eol,start whichwrap+=<,>,[,]
set winaltkeys=no   " 设置 alt 键不映射到菜单栏

if has('clipboard')
    if has('unnamedplus')  " When possible use + register for copy-paste
        set clipboard=unnamed,unnamedplus
    else         " On mac and Windows, use * register for copy-paste
        set clipboard=unnamed
    endif
endif

" 打开文件时自动回到上次编辑的地方
if has("autocmd")
    autocmd BufReadPost *
        \ if line("'\"") > 0 && line ("'\"") <= line("$") |
        \   exe "normal g'\"" |
        \ endif
endif

"查询当前编辑的文件的字符编码方式并打开
set fileencodings=utf-8,gbk2312,gbk,gb18030,cp936

"vim内部使用的字符编码方式
set encoding=utf-8

" 分割出来的窗口位于当前窗口下边/右边
set splitbelow
set splitright

set autoindent
set shiftwidth=4
set tabstop=4
set softtabstop=4
set expandtab
autocmd FileType python set textwidth=79

"---------------------------------------------------------------自定义状态栏--------------------------------------------------------------------------------
set laststatus=2
"set statusline=%<%1*[B-%n]%*
"set statusline+=%2*\ %F%=\ %*
"set statusline+=%3*\ %m%r%y%w\ %*
"set statusline+=%=%4*\ %{&ff}\ \|\ %{\"\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"\ \|\"}\ %-14.(%l:%c%V%)%*
"set statusline+=%5*\ %P\ %*
set statusline=%<%1*[B-%n]%*%2*\ %F%=\ %*%3*\ %m%r%y%w\ %*%4*\ %{&ff}\ \|\ %{\"\".(&fenc==\"\"?&enc:&fenc).((exists(\"+bomb\")\ &&\ &bomb)?\",B\":\"\").\"\ \|\"}\ %-14.(%l:%c%V%)%*%5*\ %P\ %*
hi User1 cterm=bold ctermfg=249 ctermbg=240 gui=bold guifg=#b2b2b2 guibg=#585858
hi User2 cterm=bold ctermfg=169 ctermbg=238 gui=bold guifg=#d75faf guibg=#444444
hi User3 cterm=None ctermfg=250 ctermbg=238 gui=None guifg=#bcbcbc guibg=#444444
hi User4 cterm=None ctermfg=250 ctermbg=238 gui=None guifg=#bcbcbc guibg=#444444
hi User5 cterm=None ctermfg=249 ctermbg=240 gui=None guifg=#b2b2b2 guibg=#585858

let mapleader=" "   "配置前缀键
nnoremap \ ,
nnoremap J j
nnoremap K k
inoremap jk <ESC>
nnoremap <Up> <Nop>
nnoremap <Down> <Nop>
nnoremap <Left> <Nop>
nnoremap <Right> <Nop>
nnoremap <leader>/ :nohlsearch<CR>

nnoremap <leader>tn :tabnew<cr>
nnoremap <leader>tc :tabclose<cr>
nnoremap <leader>th :tabp<cr>
nnoremap <leader>tl :tabn<cr>

" 移动分割窗口
nnoremap <C-j> <C-W>j
nnoremap <C-k> <C-W>k
nnoremap <C-h> <C-W>h
nnoremap <C-l> <C-W>l

" 正常模式下 alt+j,k,h,l 调整分割窗口大小
nnoremap <M-j> :resize +5<cr>
nnoremap <M-k> :resize -5<cr>
nnoremap <M-h> :vertical resize -5<cr>
nnoremap <M-l> :vertical resize +5<cr>

" 打印当前时间
nnoremap <F3> a<C-R>=strftime("%Y-%m-%d %a %I:%M %p")<CR><Esc>

" 复制当前文件/路径到剪贴板
nnoremap ,fn :let @*=substitute(expand("%"), "/", "\\", "g")<CR>
nnoremap ,fp :let @*=substitute(expand("%:p"), "/", "\\", "g")<CR>

nnoremap <F2> :g/^\s*$/d<CR>    " <F2> 去空行
map <F3> :%s/\s\+$//<CR>    " <F3> 删除多余空格

nnoremap <F4> :call NumberToggle()<cr>  " <F4> 相对和绝对行号切换
function! NumberToggle()
    if(&relativenumber == 1)
        set norelativenumber number
    else
        set relativenumber
    endif
endfunc
